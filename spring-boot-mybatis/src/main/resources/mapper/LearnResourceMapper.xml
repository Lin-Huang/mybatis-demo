<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lin.dao.LearnResourceMapper">
    <resultMap id="baseResultMap" type="com.lin.domain.LearnResouce">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="baseColumnList">
        id, author, title, url
    </sql>

    <select id="queryLearnResourceList" resultMap="baseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="baseColumnList" />
        FROM learn_resource
        <where>
          1 = 1
            <if test="author != null and author != ''">
                AND author like concat('%', #{author, jdbcType=VARCHAR}, '%')
            </if>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title, jdbcType=VARCHAR}, '%')
            </if>
        </where>
    </select>
    
    <select id="queryLearnResouceById" resultMap="baseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="baseColumnList" />
        FROM learn_resource
        where id = #{id}
    </select>

    <insert id="add" parameterType="com.lin.domain.LearnResouce">
        insert into learn_resource (author, title, url) values (#{author}, #{title}, #{url})
    </insert>

    <update id="update" parameterType="com.lin.domain.LearnResouce" >
        update learn_resource set author = #{author}, title = #{title}, url = #{url} where id = #{id}
    </update>

    <delete id="deleteByIds" parameterType="java.lang.String" >
        delete from learn_resource where id in
        <foreach item="idItem" collection="array" open="(" separator="," close=")">
          #{idItem}
        </foreach>
    </delete>
</mapper>